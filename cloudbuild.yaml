steps:
  # Test step
  - id: 'Test'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - -c
      - |
        make install
        make test
  # Step 2: Get the URL of invite-user-function to save in the env of 2nd step
  - id: 'Get Cloud Function URL'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - -c
      - |
        gcloud functions describe invite-user-function --gen2 --region=europe-west2 --format="value(serviceConfig.uri)" > /workspace/function_url.txt
        cat /workspace/function_url.txt
  # Step 3: Deploy Cloud Function
  - id: 'Deploy Cloud Function'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    waitFor:
      - 'Get Cloud Function URL'
    env:
      - 'INVITE_USER_FUNCTION_URL=$(cat /workspace/function_url.txt)'
      - 'PROJECT_NUMBER=$_PROJECT_NUMBER'
      - 'REGION=$_REGION'
      - 'SUPABASE_URL=${_SUPABASE_URL}'
      - 'SUPABASE_SERVICE_ROLE_SECRET_ID=${_SUPABASE_SERVICE_ROLE_SECRET_ID}'
      - 'VERSION_ID=${_VERSION_ID}'
      - 'SENTRY_DSN=${_SENTRY_DSN}'
      - 'QUEUE_NAME=${_QUEUE_NAME}'
    args:
      - gcloud
      - functions
      - deploy
      - invite-users-parser-function
      - --region=europe-west2
      - --runtime=python310
      - --trigger-http
      - --allow-unauthenticated
      - --gen2
      - --source=.
      - --entry-point=invite_users
      - --service-account=${_SERVICE_ACCOUNT}
      - --set-env-vars=PROJECT_ID=${_PROJECT_ID}
      - --set-env-vars=PROJECT_NUMBER=${_PROJECT_NUMBER}
      - --set-env-vars=REGION=${_REGION}
      - --set-env-vars=SUPABASE_URL=${_SUPABASE_URL}
      - --set-env-vars=SUPABASE_SERVICE_ROLE_SECRET_ID=${_SUPABASE_SERVICE_ROLE_SECRET_ID}
      - --set-env-vars=VERSION_ID=${_VERSION_ID}
      - --set-env-vars=SENTRY_DSN=${_SENTRY_DSN}
      - --set-env-vars=INVITE_USER_FUNCTION_URL=${_INVITE_USER_FUNCTION_URL}
      - --set-env-vars=QUEUE_NAME=${_QUEUE_NAME}